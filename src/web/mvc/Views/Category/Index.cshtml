@using webapp.mvc.Models;
@model webapp.mvc.Models.PagedViewModel<webapp.mvc.Models.Category>

@{
    ViewBag.Title = "Index";
}

<h2>Categories</h2>
<div class="controls">
    <div>
        @Html.ActionLink("Create New", "Create", "Category", new {}, new { @class ="btn btn-primary"})
    </div>
    @using (Html.BeginForm("Index", "Category", FormMethod.Post, new { @class = "search-filter-controls" }))
    {
        <div>
            <label for="searchString" class="control-label">Title filter</label>
        </div>
        <div>
            @Html.TextBox("searchString", null, new { @value = @ViewBag.Filter, @placeholder = "Filter items by..."})
        </div>
        <input type="submit" value="Filter" class="btn btn-primary" />
    }
</div>
<table class="table library-items-table">
    <tr>
        <th>
            Category Name
        </th>
        <th>
            Update
        </th>
    </tr>

    @foreach (var item in Model.Page)
    {
        <tr class="library-items-table-item" onclick='route(`Category/Edit/${@Json.Serialize(item.ID)}`)'>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.ID })
            </td>
        </tr>
    }

</table>
<div class="controls-bottom">
@if(Model.TotalPages <= 5) {
    <a href="@Url.Action("Index", new { page = Math.Max(@ViewBag.CurrentPage -5, 1), searchString = @ViewBag.Filter })" class="btn btn-primary page-btn">&larr;</a>
    @for (var pageNumber = 1; pageNumber <= Model.TotalPages; ++pageNumber) {
        if(pageNumber == @ViewBag.CurrentPage) {
            <a href="@Url.Action("Index", new { page = pageNumber , searchString = @ViewBag.Filter })" class="btn btn-primary webapp-active page-btn">@pageNumber</a>
        } else {
            <a href="@Url.Action("Index", new { page = pageNumber, searchString = @ViewBag.Filter  })" class="btn btn-primary page-btn">@pageNumber</a>
        }
    }
    <a href="@Url.Action("Index", new { page = Math.Min(@ViewBag.CurrentPage + 5, Math.Max(Model.TotalPages, 1)), searchString = @ViewBag.Filter  })" class="btn btn-primary page-btn">&rarr;</a>
} else {
    var start = Math.Max(@ViewBag.CurrentPage - 3, 1);
    var end = Math.Min(@ViewBag.CurrentPage + 6, Model.TotalPages);
    <a href="@Url.Action("Index", new { page = Math.Max(@ViewBag.CurrentPage -5, 1), searchString = @ViewBag.Filter  })" class="btn btn-primary page-btn">&larr;</a>
    for(var pageNumber = start; pageNumber <= end; pageNumber++) {
        if(pageNumber == @ViewBag.CurrentPage) {
            <a href="@Url.Action("Index", new { page = pageNumber, searchString = @ViewBag.Filter  })" class="btn btn-primary webapp-active page-btn">@pageNumber</a>
        } else {
            <a href="@Url.Action("Index", new { page = pageNumber, searchString = @ViewBag.Filter  })" class="btn btn-primary page-btn">@pageNumber</a>
        }
    }
    <a href="@Url.Action("Index", new { page = Math.Min(@ViewBag.CurrentPage + 5, Math.Max(Model.TotalPages, 1)), searchString = @ViewBag.Filter  })" class="btn btn-primary page-btn">&rarr;</a>
}
</div>