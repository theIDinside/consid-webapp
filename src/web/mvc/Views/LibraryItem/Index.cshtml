@model IEnumerable<webapp.mvc.Models.LibraryItem>
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
@{
    ViewBag.Title = "Index";
}
<style type="text/css">
    .controls {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: space-evenly;
        margin-bottom: 3px;
    }
</style>
<h2>Library Items</h2>
<div class="controls">
    <p>
        @Html.ActionLink("Create New", "Create", "LibraryItem", new {}, new { @class ="btn btn-primary"})
    </p>
    @using (Html.BeginForm("Index", "LibraryItem"))
    {
        <div class="form-group">
            <div class="col-md-10">
                <label for="searchString" class="control-label col-md-2">Title filter</label>
            </div>
            <div class="col-md-10">
                @Html.TextBox("searchString", null, new { @placeholder = "Filter items by..."})
                @Html.Hidden("sortBy", new { sortBy = ViewBag.Ordering })
            </div>
        </div>
        <input type="submit" value="Filter" class="btn btn-primary" />
    }
</div>
<table class="table">
    <tr>
        <th>
            @{
                if (ViewBag.Ordering == "cat")
                {
                    @Html.ActionLink("Category", "Index", new { sortBy = "cat_desc" })
                }
                else
                {
                    @Html.ActionLink("Category", "Index", new { sortBy = "cat" })
                }
            }
        </th>
        <th>
            <!-- This should not display the Category ID, but the actual category name -->
            @{
                if (ViewBag.Ordering == "title")
                {
                    @Html.ActionLink("Title", "Index", new { sortBy = "title_desc" })
                }
                else
                {
                    @Html.ActionLink("Title", "Index", new { sortBy = "title" })
                }
            }
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Author)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Pages)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RunTimeMinutes)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Borrower)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BorrowDate)
        </th>
        <th>
            @{
                if (ViewBag.Ordering == "type")
                {
                    @Html.ActionLink("Type", "Index", new { sortBy = "type_desc" })
                }
                else
                {
                    @Html.ActionLink("Type", "Index", new { sortBy = "type" })
                }
            }

        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Listing)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pages)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RunTimeMinutes)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Borrower)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.displayDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>
