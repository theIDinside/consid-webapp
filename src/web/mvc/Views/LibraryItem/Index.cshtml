@using webapp.mvc.Models;
@model webapp.mvc.Models.PagedViewModel<LibraryItem>
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
@{
    ViewBag.Title = "Index";
}
<style type="text/css">

</style>
<h2>Library Items</h2>
<div class="controls">
    <div>
        @Html.ActionLink("Create New", "Create", "LibraryItem", new {}, new { @class ="btn btn-primary"})
    </div>
    @using (Html.BeginForm("Index", "LibraryItem", FormMethod.Post, new { @class = "search-filter-controls" }))

    {
        <div>
            <label for="searchString" class="control-label">Title filter</label>
        </div>
        <div>
            @Html.TextBox("searchString", null, new { @placeholder = "Filter items by..."})
        </div>
        <div>
            @Html.Hidden("sortBy", new { sortBy = ViewBag.Ordering })
        </div>
        <input type="submit" value="Filter" class="btn btn-primary" />
    }
</div>
<table class="table library-items-table">
    <tr>
        <th>
            @{
                if (ViewBag.Ordering == "cat")
                {
                    @Html.ActionLink("Category", "Index", new { sortBy = "cat_desc" })
                }
                else
                {
                    @Html.ActionLink("Category", "Index", new { sortBy = "cat" })
                }
            }
        </th>
        <th class="library-item-title">
            <!-- This should not display the Category ID, but the actual category name -->
            @{
                if (ViewBag.Ordering == "title")
                {
                    @Html.ActionLink("Title", "Index", new { sortBy = "title_desc" })
                }
                else
                {
                    @Html.ActionLink("Title", "Index", new { sortBy = "title" })
                }
            }
        </th>
        <th>
            Author
        </th>
        <th class="library-items-length">
            Length
        </th>
        <th>
            Borrower
        </th>
        <th>
            Borrow date
        </th>
        <th>
            @{
                if (ViewBag.Ordering == "type")
                {
                    @Html.ActionLink("Type", "Index", new { sortBy = "type_desc" })
                }
                else
                {
                    @Html.ActionLink("Type", "Index", new { sortBy = "type" })
                }
            }

        </th>
        <th>Update</th>
    </tr>

    @foreach (var item in Model.Page)
    {
        <tr class="library-items-table-item" onclick='route(`LibraryItem/Edit/${@Json.Serialize(item.ID)}`)'>
            <td>
                @item.Category.CategoryName
            </td>
            <td class="library-item-title">
                @item.Listing
            </td>
            <td>
                @item.Author
            </td>
            <td class="library-items-length">
                @{
                    if (item.Pages.HasValue)
                    {
                        <div>@Json.Serialize(item.Pages) pages</div>
                    } else {
                        <div>@Json.Serialize(item.RunTimeMinutes) min</div>
                    }
                }
            </td>
            <td>
                @item.Borrower
            </td>
            <td>
                @item.displayDate
            </td>
            <td>
                @item.Type
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }
</table>
<br>
@for (var pageNumber = 1; pageNumber <= Model.TotalPages; ++pageNumber) {
    <a href="@Url.Action("Index", new { page = pageNumber })" class="btn btn-primary">@pageNumber</a>
}