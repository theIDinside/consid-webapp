@model webapp.mvc.Models.Employee

@{
    ViewBag.Title = "Delete";
}

<h2>Delete</h2>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Employee</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Salary)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Salary)
        </dd>

        <dt>
            Position
        </dt>
            @{
                if(Model.IsCEO) {
                    <dd>CEO</dd>
                } else if(Model.IsManager) {
                    <dd>Manager</dd>
                } else {
                    <dd>Employee</dd>
                }
            }
        <dt>
            Managed by
        </dt>
        <dd id="ManagedBy"></dd>

    </dl>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-primary" /> |
            @Html.ActionLink("Back to List", "Index")
        </div>
    }
</div>

<script>
    onDocumentLoaded(() => {
        let managerId = @Json.Serialize(Model.ManagerID ?? -1 );
        console.log(`manager id: ${managerId}`);
        let managedByElement = document.getElementById("ManagedBy");
        if(managerId == -1) {
            managedByElement.innerText = "No one";
        } else {
            getEmployeeInfo(managerId).then(employee => {
                if(employee.id != undefined) {
                    let link = document.createElement("a");
                    link.href = `/Employees/Edit/${managerId}`;
                    let name = document.createTextNode(`${employee.firstname} ${employee.lastname}`);
                    link.appendChild(name);
                    managedByElement.appendChild(link);
                } else {
                    throw new Error(`Could not retrieve Employee record with id ${managerId}`);
                }
            }).catch(err => {
                console.log(`[DATA REQUEST ERROR]: ${err}`);
            })
        }
    })
</script>